{"version":3,"sources":["components/PatientInfo/PatientInfo.js","data/samplePatientData.js","components/diagnosis.js","data/configurations.js","data/sampleMedicationModel.js","components/medication.js","App.js","components/Launch.js","serviceWorker.js","index.js"],"names":["PatientInfo","formatAddress","Street1","Street2","City","State","PostalCode","Country","Type","console","log","this","props","patient","className","Name","Gender","Array","isArray","Addresses","map","Active","BirthDate","Phone","p","Fragment","Number","EmergencyContacts","v","RelationShip","React","Component","resourceType","id","meta","versionId","lastUpdated","text","status","div","extension","url","valueCoding","system","code","display","userSelected","valueString","identifier","use","type","coding","value","period","start","active","name","family","given","telecom","rank","gender","birthDate","address","line","city","district","state","postalCode","country","maritalStatus","contact","relationship","end","communication","language","preferred","generalPractitioner","reference","Diagnosis","baseURL","Coding","Dose","DoseQuantity","DoseUnits","EffectiveDate","Medication","ReasonGiven","ReasonNotGiven","Route","Status","WasGiven","handleLoadData","fetch","configurations","then","res","udpateState","error","updateState","SampleMedicationModel","medication","window","UpdateMedication","a","bind","onClick","renderTable","s","setState","Date","toDateString","App","retreivePhone","retreiveAddress","retreiveContacts","Email","Phones","Address","getPatientDetails","find","updatePatient","smartKey","SamplePatientData","SMART","ready","client","read","catch","UpdatePatient","FHIR","oauth2","authorize","location","href","Boolean","hostname","match","params","Object","fromEntries","replace","split","ReactDOM","render","filter","length","Launch","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.3059740a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass PatientInfo extends React.Component {\r\n  render() {\r\n    console.log(\"patient Info \", this.props.patient);\r\n\r\n    return (\r\n      <div className=\"col-lg-4 patient-info p-2\">\r\n        <div className=\"row col-lg-12 col-md-12\">\r\n          <h4 className=\"col-lg-12 p-2 bg-secondary text-light mb-0 border-0 mt-2\">\r\n            Patient Information\r\n          </h4>\r\n          <ul className=\"col p-0 m-0\">\r\n            <li className=\"row p-3 border text-left no-gutters\">\r\n              <span className=\"col-lg-3 text-left font-weight-bold\">Name</span>\r\n              {this.props.patient.Name}\r\n            </li>\r\n            <li className=\"row p-3 border text-left no-gutters\">\r\n              <span className=\"col-lg-3 text-left font-weight-bold\">\r\n                Gender\r\n              </span>\r\n              {this.props.patient.Gender}\r\n            </li>\r\n            <li className=\"row p-3 border text-left no-gutters\">\r\n              <span className=\"col-lg-3 text-left font-weight-bold\">\r\n                Addresses\r\n              </span>\r\n              {Array.isArray(this.props.patient.Addresses)\r\n                ? this.props.patient.Addresses.map(this.formatAddress)\r\n                : \"N/A\"}\r\n            </li>\r\n            <li className=\"row p-3 border text-left no-gutters\">\r\n              <span className=\"col-lg-3 text-left font-weight-bold\">\r\n                Active\r\n              </span>\r\n              {this.props.patient.Active ? \"Yes\" : \"No\"}\r\n            </li>\r\n            <li className=\"row p-3 border text-left no-gutters\">\r\n              <span className=\"col-lg-3 text-left font-weight-bold\">\r\n                Birth Date\r\n              </span>\r\n              {this.props.patient.BirthDate}\r\n            </li>\r\n            <li className=\"row p-3 border text-left no-gutters\">\r\n              <span className=\"col-lg-3 text-left font-weight-bold\">Phone</span>\r\n              {Array.isArray(this.props.patient.Phone)\r\n                ? this.props.patient.Phone.map(p => (\r\n                    <React.Fragment>\r\n                      {`${p.Number} (${p.Type})`}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  ))\r\n                : \"N/A\"}\r\n            </li>\r\n            <li className=\"row p-3 border text-left no-gutters\">\r\n              <span className=\"col-lg-3 text-left font-weight-bold\">\r\n                Emergency Contacts\r\n              </span>\r\n              {Array.isArray(this.props.patient.EmergencyContacts)\r\n                ? this.props.patient.EmergencyContacts.map(v => (\r\n                    <React.Fragment>\r\n                      {`${v.Name} (${v.RelationShip})`}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  ))\r\n                : \"N/A\"}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  formatAddress = ({\r\n    Street1,\r\n    Street2,\r\n    City,\r\n    State,\r\n    PostalCode,\r\n    Country,\r\n    Type\r\n  }) =>\r\n    `${Street1}, ${\r\n      Street2 ? Street2 + \", \" : \"\"\r\n    }${City}, ${State}, ${PostalCode}, ${Country} [${Type}]`;\r\n}\r\n\r\nexport default PatientInfo;\r\n","export default {\r\n  resourceType: \"Patient\",\r\n  id: \"4342010\",\r\n  meta: { versionId: \"25\", lastUpdated: \"2019-07-22T08:19:55.000Z\" },\r\n  text: {\r\n    status: \"generated\",\r\n    div:\r\n      '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Patient</b></p><p><b>Status</b>: Active</p><p><b>Name</b>: SMART, JOE</p><p><b>DOB</b>: Apr 29, 1976</p><p><b>Administrative Gender</b>: Male</p><p><b>Marital Status</b>: Married</p></div>'\r\n  },\r\n  extension: [\r\n    {\r\n      url: \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity\",\r\n      extension: [\r\n        {\r\n          url: \"ombCategory\",\r\n          valueCoding: {\r\n            system: \"urn:oid:2.16.840.1.113883.6.238\",\r\n            code: \"2186-5\",\r\n            display: \"Non Hispanic or Latino\",\r\n            userSelected: false\r\n          }\r\n        },\r\n        { url: \"text\", valueString: \"Not Hispanic or Latino\" }\r\n      ]\r\n    }\r\n  ],\r\n  identifier: [\r\n    {\r\n      id: \"CI-6810251-0\",\r\n      use: \"usual\",\r\n      type: {\r\n        coding: [\r\n          {\r\n            system:\r\n              \"https://fhir.cerner.com/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/codeSet/4\",\r\n            code: \"10\",\r\n            display: \"MRN\",\r\n            userSelected: true\r\n          },\r\n          {\r\n            system: \"http://terminology.hl7.org/CodeSystem/v2-0203\",\r\n            code: \"MR\",\r\n            display: \"Medical record number\",\r\n            userSelected: false\r\n          }\r\n        ],\r\n        text: \"MRN\"\r\n      },\r\n      system: \"urn:oid:1.1.1.1.1.1\",\r\n      value: \"10002702\",\r\n      period: { start: \"2016-06-22T21:06:58.000Z\" }\r\n    },\r\n    {\r\n      id: \"CI-8934220-2\",\r\n      use: \"usual\",\r\n      type: {\r\n        coding: [\r\n          {\r\n            system:\r\n              \"https://fhir.cerner.com/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/codeSet/4\",\r\n            code: \"670843\",\r\n            display: \"Messaging\",\r\n            userSelected: true\r\n          },\r\n          {\r\n            system: \"http://terminology.hl7.org/CodeSystem/v2-0203\",\r\n            code: \"U\",\r\n            display: \"Unspecified identifier\",\r\n            userSelected: false\r\n          }\r\n        ],\r\n        text: \"Messaging\"\r\n      },\r\n      system: \"urn:oid:2.16.840.1.113883.3.13.8\",\r\n      value: \"FB4A2EB3BCB34B208FEEAFA27A7BD252\",\r\n      period: { start: \"2018-09-13T16:44:32.000Z\" }\r\n    },\r\n    {\r\n      id: \"CI-7476209-3\",\r\n      use: \"usual\",\r\n      type: {\r\n        coding: [\r\n          {\r\n            system:\r\n              \"https://fhir.cerner.com/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/codeSet/4\",\r\n            code: \"36322657\",\r\n            display: \"Federated Person Principal\",\r\n            userSelected: true\r\n          },\r\n          {\r\n            system: \"http://terminology.hl7.org/CodeSystem/v2-0203\",\r\n            code: \"AN\",\r\n            display: \"Account number\",\r\n            userSelected: false\r\n          }\r\n        ],\r\n        text: \"Federated Person Principal\"\r\n      },\r\n      system: \"urn:oid:2.16.840.1.113883.3.13.6\",\r\n      value:\r\n        \"URN:CERNER:IDENTITY-FEDERATION:REALM:687F29DD-69DD-4DE5-ACB1-FD8A2241EF3A:PRINCIPAL:UY4572B79XK\",\r\n      period: { start: \"2016-01-01T10:00:00.000Z\" }\r\n    },\r\n    {\r\n      id: \"CI-7476210-4\",\r\n      use: \"usual\",\r\n      type: {\r\n        coding: [\r\n          {\r\n            system:\r\n              \"https://fhir.cerner.com/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/codeSet/4\",\r\n            code: \"36322657\",\r\n            display: \"Federated Person Principal\",\r\n            userSelected: true\r\n          },\r\n          {\r\n            system: \"http://terminology.hl7.org/CodeSystem/v2-0203\",\r\n            code: \"AN\",\r\n            display: \"Account number\",\r\n            userSelected: false\r\n          }\r\n        ],\r\n        text: \"Federated Person Principal\"\r\n      },\r\n      system: \"urn:oid:2.16.840.1.113883.3.13.6\",\r\n      value:\r\n        \"urn:cerner:identity-federation:realm:687f29dd-69dd-4de5-acb1-fd8a2241ef3a:principal:UY4572B79XK\",\r\n      period: { start: \"2016-01-01T10:00:00.000Z\" }\r\n    },\r\n    {\r\n      id: \"CI-9064212-5\",\r\n      use: \"usual\",\r\n      type: {\r\n        coding: [\r\n          {\r\n            system:\r\n              \"https://fhir.cerner.com/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/codeSet/4\",\r\n            code: \"36322657\",\r\n            display: \"Federated Person Principal\",\r\n            userSelected: true\r\n          },\r\n          {\r\n            system: \"http://terminology.hl7.org/CodeSystem/v2-0203\",\r\n            code: \"AN\",\r\n            display: \"Account number\",\r\n            userSelected: false\r\n          }\r\n        ],\r\n        text: \"Federated Person Principal\"\r\n      },\r\n      system: \"urn:oid:2.16.840.1.113883.3.13.6\",\r\n      value:\r\n        \"URN:CERNER:IDENTITY-FEDERATION:REALM:2E882EFF-FA72-4882-ADC8-A685F7D2BFA6:PRINCIPAL:XYZ1234\"\r\n    },\r\n    {\r\n      id: \"CI-9070210-6\",\r\n      use: \"usual\",\r\n      type: {\r\n        coding: [\r\n          {\r\n            system:\r\n              \"https://fhir.cerner.com/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/codeSet/4\",\r\n            code: \"36322657\",\r\n            display: \"Federated Person Principal\",\r\n            userSelected: true\r\n          },\r\n          {\r\n            system: \"http://terminology.hl7.org/CodeSystem/v2-0203\",\r\n            code: \"AN\",\r\n            display: \"Account number\",\r\n            userSelected: false\r\n          }\r\n        ],\r\n        text: \"Federated Person Principal\"\r\n      },\r\n      system: \"urn:oid:2.16.840.1.113883.3.13.6\",\r\n      value:\r\n        \"URN:CERNER:IDENTITY-FEDERATION:REALM:2E882EFF-FA72-4882-ADC8-A685F7D2BFA6:PRINCIPAL:XYIWIE1234\"\r\n    }\r\n  ],\r\n  active: true,\r\n  name: [\r\n    {\r\n      id: \"CI-4342010-0\",\r\n      use: \"official\",\r\n      text: \"SMART, JOE\",\r\n      family: \"SMART\",\r\n      given: [\"JOE\"],\r\n      period: { start: \"2016-06-22T21:06:59.000Z\" }\r\n    }\r\n  ],\r\n  telecom: [\r\n    {\r\n      id: \"CI-PH-2023942-0\",\r\n      system: \"phone\",\r\n      value: \"9139898765\",\r\n      use: \"home\",\r\n      rank: \"1\",\r\n      period: { start: \"2017-06-27T21:47:16.000Z\" }\r\n    },\r\n    {\r\n      id: \"CI-PH-2023944-1\",\r\n      system: \"phone\",\r\n      value: \"9137876555\",\r\n      use: \"mobile\",\r\n      rank: \"1\",\r\n      period: { start: \"2017-06-27T21:47:16.000Z\" }\r\n    },\r\n    {\r\n      id: \"CI-EM-2399940-0\",\r\n      system: \"email\",\r\n      value: \"kathy.pickering@cerner.com\",\r\n      use: \"home\",\r\n      rank: \"1\",\r\n      period: { start: \"2018-09-13T16:43:28.000Z\" }\r\n    }\r\n  ],\r\n  gender: \"male\",\r\n  birthDate: \"1976-04-29\",\r\n  address: [\r\n    {\r\n      id: \"CI-1925899-0\",\r\n      use: \"home\",\r\n      text: \"1234 Blvd\\nOverland Park, KS 66213\\nUSA\",\r\n      line: [\"1234 Blvd\"],\r\n      city: \"Overland Park\",\r\n      district: \"Johnson\",\r\n      state: \"KS\",\r\n      postalCode: \"66213\",\r\n      country: \"USA\",\r\n      period: { start: \"2017-06-27T21:47:16.000Z\" }\r\n    }\r\n  ],\r\n  maritalStatus: {\r\n    coding: [\r\n      {\r\n        system:\r\n          \"https://fhir.cerner.com/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/codeSet/38\",\r\n        code: \"309237\",\r\n        display: \"Married\",\r\n        userSelected: true\r\n      },\r\n      {\r\n        system: \"http://terminology.hl7.org/CodeSystem/v3-MaritalStatus\",\r\n        code: \"M\",\r\n        display: \"Married\",\r\n        userSelected: false\r\n      }\r\n    ],\r\n    text: \"Married\"\r\n  },\r\n  contact: [\r\n    {\r\n      relationship: [\r\n        {\r\n          coding: [\r\n            {\r\n              system:\r\n                \"https://fhir.cerner.com/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/codeSet/351\",\r\n              code: \"36327661\",\r\n              display: \"Authorized Representative\",\r\n              userSelected: true\r\n            }\r\n          ],\r\n          text: \"Authorized Representative\"\r\n        }\r\n      ],\r\n      name: {\r\n        id: \"CI-4342009-0\",\r\n        use: \"official\",\r\n        text: \"SHANKAR, Ganesh Jayaraman\",\r\n        family: \"SHANKAR\",\r\n        given: [\"Ganesh\", \"Jayaraman\"],\r\n        period: { start: \"2016-06-22T20:43:05.000Z\" }\r\n      },\r\n      telecom: [\r\n        {\r\n          system: \"phone\",\r\n          value: \"9035768555\",\r\n          use: \"home\",\r\n          rank: \"1\",\r\n          period: { start: \"2019-09-18T20:48:19.000Z\" }\r\n        },\r\n        {\r\n          system: \"email\",\r\n          value: \"kathy.pickering@cerner.com\",\r\n          use: \"home\",\r\n          rank: \"1\",\r\n          period: { start: \"2018-09-13T16:37:32.000Z\" }\r\n        }\r\n      ],\r\n      gender: \"female\",\r\n      period: {\r\n        start: \"2017-06-09T13:47:35.000Z\",\r\n        end: \"2018-05-17T20:51:36.000Z\"\r\n      }\r\n    }\r\n  ],\r\n  communication: [\r\n    {\r\n      language: {\r\n        coding: [\r\n          {\r\n            system:\r\n              \"https://fhir.cerner.com/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/codeSet/36\",\r\n            code: \"151\",\r\n            display: \"English\",\r\n            userSelected: true\r\n          },\r\n          {\r\n            system: \"urn:ietf:bcp:47\",\r\n            code: \"en\",\r\n            display: \"English\",\r\n            userSelected: false\r\n          }\r\n        ],\r\n        text: \"English\"\r\n      },\r\n      preferred: true\r\n    }\r\n  ],\r\n  generalPractitioner: [\r\n    {\r\n      id: \"CI-6810257-15\",\r\n      reference: \"Practitioner/1912007\",\r\n      display: \"McCurdy, Michael\"\r\n    }\r\n  ]\r\n};\r\n","import React from \"react\";\r\n\r\nclass Diagnosis extends React.Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-12 p-2 border bg-secondary text-light mt-2 d-flex justify-content-between\">\r\n        <span>Diagnosis</span>\r\n        <button className=\"btn btn-dark btn-sm\">Load Data</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Diagnosis;\r\n","export default {\r\n  baseURL: \"https://<endpoint>\"\r\n};\r\n","export default [\r\n  {\r\n    Coding: {},\r\n    Dose: \"N/A\",\r\n    DoseQuantity: 1000,\r\n    DoseUnits: \"ml\",\r\n    EffectiveDate: \"2017-09-07T08:33:00.000-07:00\",\r\n    Medication: \"Dextrose 2.5% with 0.45% NaCl 1000 mL\",\r\n    ReasonGiven: \"N/A\",\r\n    ReasonNotGiven: \"N/A\",\r\n    Route: \"IV\",\r\n    Status: \"active\",\r\n    WasGiven: true\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport configurations from \"./../data/configurations\";\r\nimport SampleMedicationModel from \"./../data/sampleMedicationModel\";\r\n\r\nclass Medication extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      medication: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.UpdateMedication = function(a) {\r\n      this.updateState(a);\r\n    }.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"col-lg-12 p-2 border bg-secondary text-light mt-4 d-flex justify-content-between\">\r\n          <span>Medication</span>\r\n          <button onClick={this.handleLoadData} className=\"btn btn-dark btn-sm\">\r\n            Load Data\r\n          </button>\r\n        </div>\r\n        {this.state.medication && this.renderTable()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  handleLoadData = () => {\r\n    console.log(\"Loading medication data!\");\r\n    fetch(configurations.baseURL + \"/Medication\").then(\r\n      res => this.udpateState(res),\r\n      error => {\r\n        console.log(\"fetch medication failed\", error);\r\n        this.updateState(SampleMedicationModel);\r\n      }\r\n    );\r\n  };\r\n\r\n  updateState(s) {\r\n    this.setState({ medication: s });\r\n  }\r\n\r\n  renderTable() {\r\n    return (\r\n      <div className=\"table-responsive col-lg-12 p-0\">\r\n        <table className=\"table table-striped table-sm table-hover\">\r\n          <thead>\r\n            <tr className=\"row m-0\">\r\n              <th className=\"col\">Medication</th>\r\n              <th className=\"col\">Status</th>\r\n              <th className=\"col\">DoseQuantity</th>\r\n              <th className=\"col\">DoseUnits</th>\r\n              <th className=\"col\">EffectiveDate</th>\r\n              <th className=\"col\">ReasonGiven</th>\r\n              <th className=\"col\">ReasonNotGiven</th>\r\n              <th className=\"col\">Route</th>\r\n              <th className=\"col\">WasGiven</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.medication.map(v => (\r\n              <tr className=\"row m-0\">\r\n                <td className=\"col\">{v.Medication}</td>\r\n                <td className=\"col\">{v.Status}</td>\r\n                <td className=\"col\">{v.DoseQuantity}</td>\r\n                <td className=\"col\">{v.DoseUnits}</td>\r\n                <td className=\"col\">\r\n                  {new Date(v.EffectiveDate).toDateString()}\r\n                </td>\r\n                <td className=\"col\">{v.ReasonGiven}</td>\r\n                <td className=\"col\">{v.ReasonNotGiven}</td>\r\n                <td className=\"col\">{v.Route}</td>\r\n                <td className=\"col\">{v.WasGiven ? \"Yes\" : \"No\"}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Medication;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { oauth2 as SMART } from \"fhirclient\";\nimport PatientInfo from \"./components/PatientInfo/PatientInfo\";\nimport SamplePatientData from \"./data/samplePatientData\";\nimport Diagnosis from \"./components/diagnosis\";\nimport Medication from \"./components/medication\";\n\nclass App extends React.Component {\n  smartKey;\n\n  constructor(props) {\n    super(props);\n    this.updatePatient.bind(this);\n\n    if (props.smartKey == null) {\n      this.state = {\n        patient: this.getPatientDetails(SamplePatientData)\n      };\n    } else {\n      this.state = {\n        patient: null\n      };\n\n      SMART.ready()\n        .then(client => client.patient.read())\n        .then(\n          patient => {\n            console.log(\"patient\", patient);\n            this.updatePatient(this.getPatientDetails(patient));\n            //this.meds = meds;\n          },\n          error => {\n            console.error(error);\n          }\n        )\n        .catch(console.error);\n    }\n  }\n\n  // UI loaded\n  componentDidMount() {\n    window.UpdatePatient = function(a) {\n      this.updatePatient(a);\n    }.bind(this);\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid p-0 justify-content-start row no-gutters\">\n        <div className=\"navbar bg-dark text-light col-lg-12\">\n          <h4>React FHIR Test App</h4>\n        </div>\n        {this.state.patient && <PatientInfo patient={this.state.patient} />}\n        {!this.state.patient && (\n          <div>Waiting for information to load ... !</div>\n        )}\n        {this.state.patient && (\n          <div className=\"col-lg-8 mt-2 px-2\">\n            <Diagnosis />\n            <Medication />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  retreivePhone = ({ value, use }) => ({ Number: value, Type: use });\n  retreiveAddress = ({ use, line, city, state, postalCode, country }) => ({\n    Street1: line ? line[0] : \"\",\n    Street2: line ? line[1] : \"N/A\",\n    City: city,\n    State: state,\n    PostalCode: postalCode,\n    Country: country,\n    Type: use\n  });\n  retreiveContacts = ({ relationship, name, telecom, address }) => ({\n    Email: \"N/A\",\n    Name: name.text,\n    Phones: telecom ? telecom.map(this.retreivePhone) : \"N/A\",\n    RelationShip: relationship ? relationship[0].text : \"N/A\",\n    Address: address ? this.retreiveAddress(address) : \"N/A\"\n  });\n\n  getPatientDetails = patient => ({\n    Name: patient.name\n      ? patient.name.find(v => v.use == \"official\").text\n      : \"N/A\",\n    Gender: patient.gender,\n    Addresses: patient.address\n      ? patient.address.map(this.retreiveAddress)\n      : \"N/A\",\n    Active: patient.active,\n    BirthDate: patient.birthDate,\n    Phone: patient.telecom ? patient.telecom.map(this.retreivePhone) : \"N/A\",\n    EmergencyContacts: patient.contact\n      ? patient.contact.map(this.retreiveContacts)\n      : \"N/A\"\n  });\n\n  updatePatient(p) {\n    this.setState({ patient: p });\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport FHIR from 'fhirclient';\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        console.log(FHIR);\r\n\r\n        FHIR.oauth2.authorize({\r\n            'client_id': 'ba2b34f9-2f17-4858-b5f9-6a5b3312e26a',\r\n            'scope':  'patient/Patient.read patient/MedicationRequest.read launch online_access openid profile'\r\n        });\r\n    } \r\n\r\n\r\n    render () {\r\n        return <div className=\"App\">\r\n                {window.location.href}\r\n                'client_id': 'ba2b34f9-2f17-4858-b5f9-6a5b3312e26a'\r\n            </div>;\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Launch from './components/Launch';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst params = Object.fromEntries(window.location.href.replace(/.*\\?/, \"\").split(\"&\").map(v => v.split(\"=\")));\nconst launchContext = () => window.location.href.replace(/.*\\?/, \"\").split(\"&\").filter(v => v.split(\"=\")[0] == \"iss\").length > 0;\n\nReactDOM.render(launchContext() ? <Launch  /> : <App smartKey={params.state ? params.state : null}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}