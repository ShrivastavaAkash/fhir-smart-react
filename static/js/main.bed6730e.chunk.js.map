{"version":3,"sources":["data/patient-list.js","components/patient.js","data/configurations.js","components/medication.js","components/conditionBase.js","components/condition.js","App.js","components/Launch.js","serviceWorker.js","index.js"],"names":["id","name","desc","birthDate","gender","PatientInfo","props","handleChange","e","onHandlePatientChange","formatAddress","Street1","Street2","City","State","PostalCode","Country","Type","bind","className","this","loading","onChange","disabled","selected","patientList","map","v","value","patient","Name","Gender","readOnly","Array","isArray","Addresses","Active","BirthDate","Date","toDateString","Phone","p","Fragment","Number","EmergencyContacts","RelationShip","React","Component","baseURL","Medication","updateData","patientId","setState","console","log","fetch","configurations","then","res","json","updateState","error","state","medication","window","UpdateMedication","a","prevProps","prevState","length","renderTable","s","style","fontSize","maxHeight","Status","DoseQuantity","DoseUnits","EffectiveDate","ReasonGiven","ReasonNotGiven","Route","WasGiven","ConditionBase","collapsed","toggleCollapse","data","model","onClick","top","concat","Text","Onset","AbatementDate","Severity","Code","Coding","Condition","Diagnoses","Problems","condition","flexGrow","App","handlePatientChange","loadingPatient","target","response","updatePatient","catch","retreivePhone","use","retreiveAddress","line","city","postalCode","country","retreiveContacts","relationship","telecom","address","Email","text","Phones","Address","getPatientDetails","find","active","contact","smartKey","SMART","ready","client","read","UpdatePatient","backgroundColor","Id","FHIR","oauth2","authorize","client_id","scope","location","href","Boolean","hostname","match","params","Object","fromEntries","replace","split","ReactDOM","render","filter","Launch","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.bed6730e.chunk.js","sourcesContent":["export default [\r\n  {\r\n    id: 4342012,\r\n    name: \"SMART, Timmy\",\r\n    desc: \"Young male child with inpatient encounter\",\r\n    birthDate: \"2012-02-19\",\r\n    gender: \"Male\"\r\n  },\r\n  {\r\n    id: 1316024,\r\n    name: \"Peters, Tim\",\r\n    desc: \"\",\r\n    birthDate: \"1961-04-30\",\r\n    gender: \"Male\"\r\n  },\r\n  {\r\n    id: 4342008,\r\n    name: \"SMART, Wilma\",\r\n    desc: \"Communication language set to Hindi\",\r\n    birthDate: \"1947-03-16\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 4342009,\r\n    name: \"SMART, Nancy\",\r\n    desc: \"Patient with pregnancy condition\",\r\n    birthDate: \"1980-08-11\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 4342010,\r\n    name: \"SMART, Joe\",\r\n    desc: \"\",\r\n    birthDate: \"1976-04-29\",\r\n    gender: \"Male\"\r\n  },\r\n  {\r\n    id: 4342011,\r\n    name: \"SMART, Hailey\",\r\n    desc: \"\",\r\n    birthDate: \"2003-12-02\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 4478007,\r\n    name: \"SMART, Fred Rick\",\r\n    desc: \"\",\r\n    birthDate: \"1946-08-22\",\r\n    gender: \"Male\"\r\n  },\r\n  {\r\n    id: 4596007,\r\n    name: \"SMART, Valerie S\",\r\n    desc: \"\",\r\n    birthDate: \"1984-04-15\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 4696007,\r\n    name: \"Rotunda, Rhonda\",\r\n    desc: \"Patient with pregnancy condition\",\r\n    birthDate: \"1980-05-01\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 4614008,\r\n    name: \"Read, Amber\",\r\n    desc: \"\",\r\n    birthDate: \"2005-11-21\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 4754012,\r\n    name: \"SMART, Dave\",\r\n    desc: \"\",\r\n    birthDate: \"1980-07-15\",\r\n    gender: \"Male\"\r\n  },\r\n  {\r\n    id: 4790007,\r\n    name: \"MARTIN-GREEN, Sonequa\",\r\n    desc: \"\",\r\n    birthDate: \"1985-04-12\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 4642007,\r\n    name: \"SMART, Connie\",\r\n    desc: \"Patient with common technical issues\",\r\n    birthDate: \"1972-12-19\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 4342012,\r\n    name: \"SMART, Timmy\",\r\n    desc: \"Young male child with outpatient encounter\",\r\n    birthDate: \"2012-02-19\",\r\n    gender: \"Male\"\r\n  },\r\n  {\r\n    id: 4890008,\r\n    name: \"Svensson, Linda\",\r\n    desc: \"\",\r\n    birthDate: \"1981-03-30\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 4890007,\r\n    name: \"Johansson, Anders\",\r\n    desc: \"\",\r\n    birthDate: \"1936-10-15\",\r\n    gender: \"Male\"\r\n  },\r\n  {\r\n    id: 4924007,\r\n    name: \"Goldberg, Whoopi\",\r\n    desc: \"Critical care patient\",\r\n    birthDate: \"1955-01-01\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 5226007,\r\n    name: \"Parrish, Lizzie\",\r\n    desc: \"ICU patient with hourly vital signs\",\r\n    birthDate: \"1990-08-30\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 5338007,\r\n    name: \"Davis, Athol J\",\r\n    desc: \"Patient with height and weight in imperial units\",\r\n    birthDate: \"1989-02-19\",\r\n    gender: \"Male\"\r\n  },\r\n  {\r\n    id: 4744007,\r\n    name: \"Oncology, Cancerstaging\",\r\n    desc: \"Cancer patient with cancer staging observations\",\r\n    birthDate: \"1960-01-17\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 5862008,\r\n    name: \"Emory, Hal\",\r\n    desc: \"inpatient with Vancomycin and Augmentin medication orders\",\r\n    birthDate: \"1991-04-05\",\r\n    gender: \"male\"\r\n  },\r\n  {\r\n    id: 5862007,\r\n    name: \"Emory, Carrie\",\r\n    desc: \"inpatient with Levofloxacin and Vancomycin medication orders\",\r\n    birthDate: \"1990-04-01\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 5926007,\r\n    name: \"Walter, Claudio\",\r\n    desc:\r\n      \"69 year old male patient that has had a Pulmonary …ive conditions and laboratory orders with results\",\r\n    birthDate: \"1949-09-09\",\r\n    gender: \"Male\"\r\n  },\r\n  {\r\n    id: 5938007,\r\n    name: \"McNabb, Sheona\",\r\n    desc: \"4 month old female inpatient with cow milk and nut allergies\",\r\n    birthDate: \"2019-01-10\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 5938008,\r\n    name: \"Ruskin, Ishbel\",\r\n    desc: \"1 yr old female inpatient with acetaminophen and egg allergies\",\r\n    birthDate: \"2018-05-10\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 5938009,\r\n    name: \"McGee, Ian\",\r\n    desc: \"7 yr old male inpatient with sulfa and tree pollen allergies\",\r\n    birthDate: \"2012-05-09\",\r\n    gender: \"male\"\r\n  },\r\n  {\r\n    id: 5998007,\r\n    name: \"Promis, Portal\",\r\n    desc:\r\n      \"30 yr old female inpatient with multiple health questioner documentations\",\r\n    birthDate: \"1988-08-08\",\r\n    gender: \"female\"\r\n  },\r\n  {\r\n    id: 6946007,\r\n    name: \"Snow, Christine\",\r\n    desc:\r\n      \"Patient with labor and delivery observations, conditions and procedures.\",\r\n    birthDate: \"1994-12-24\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 6954007,\r\n    name: \"Snow, Jennifer\",\r\n    desc: \"Newborn with observations, conditions and procedures.\",\r\n    birthDate: \"2019-02-12\",\r\n    gender: \"Female\"\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport patientList from \"../data/patient-list\";\r\n\r\nclass PatientInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={\"col patient-info \" + (this.props.loading ? \"load\" : \"\")}>\r\n        <div className=\"row col-lg-12 col-md-12 no-gutters p-0 border-right\">\r\n          <h4 className=\"col-lg-12 pl-2 bg-secondary text-light mb-0 border-0 mt-2 row p-1\">\r\n            <span className=\"col-lg-6\">Patient Information</span>\r\n            <select\r\n              className=\"form-control col-lg-6 bg-dark text-light\"\r\n              onChange={this.handleChange}\r\n            >\r\n              <option disabled selected>\r\n                -- Select Patient --\r\n              </option>\r\n              {patientList.map(v => (\r\n                <option value={v.id}>{v.name}</option>\r\n              ))}\r\n            </select>\r\n          </h4>\r\n          {!this.props.patient && (\r\n            <div className=\"text-secondary p-3\">Nothing to show</div>\r\n          )}\r\n          {this.props.patient && (\r\n            <ul\r\n              className={\r\n                \"col p-0 m-0 \" + (this.props.loading ? \"invisible\" : \"\")\r\n              }\r\n            >\r\n              <li className=\"row px-3 py-2 border-bottom text-left no-gutters\">\r\n                <span className=\"col-lg-3 text-left font-weight-bold\">\r\n                  Name\r\n                </span>\r\n                {this.props.patient.Name}\r\n              </li>\r\n              <li className=\"row px-3 py-2 border-bottom text-left no-gutters\">\r\n                <span className=\"col-lg-3 text-left font-weight-bold\">\r\n                  Gender\r\n                </span>\r\n                {this.props.patient.Gender}\r\n              </li>\r\n              <li className=\"row px-3 py-2 border-bottom text-left no-gutters\">\r\n                <span className=\"col-lg-3 text-left font-weight-bold\">\r\n                  Addresses\r\n                </span>\r\n                <textarea\r\n                  className=\"form-control w-75 p-0 rounded-0 border-0 bg-light\"\r\n                  readOnly={true}\r\n                >\r\n                  {Array.isArray(this.props.patient.Addresses)\r\n                    ? this.props.patient.Addresses.map(this.formatAddress)\r\n                    : \"N/A\"}\r\n                </textarea>\r\n              </li>\r\n              <li className=\"row px-3 py-2 border-bottom text-left no-gutters\">\r\n                <span className=\"col-lg-3 text-left font-weight-bold\">\r\n                  Active\r\n                </span>\r\n                {this.props.patient.Active ? \"Yes\" : \"No\"}\r\n              </li>\r\n              <li className=\"row px-3 py-2 border-bottom text-left no-gutters\">\r\n                <span className=\"col-lg-3 text-left font-weight-bold\">\r\n                  Birth Date\r\n                </span>\r\n                {this.props.patient.BirthDate\r\n                  ? new Date(this.props.patient.BirthDate).toDateString()\r\n                  : \"N/A\"}\r\n              </li>\r\n              <li className=\"row px-3 py-2 border-bottom text-left no-gutters\">\r\n                <span className=\"col-lg-3 text-left font-weight-bold\">\r\n                  Phone\r\n                </span>\r\n                {Array.isArray(this.props.patient.Phone)\r\n                  ? this.props.patient.Phone.map(p => (\r\n                      <React.Fragment>\r\n                        {`${p.Number} (${p.Type})`}\r\n                        <br />\r\n                      </React.Fragment>\r\n                    ))\r\n                  : \"N/A\"}\r\n              </li>\r\n              <li className=\"row px-3 py-2 border-bottom text-left no-gutters\">\r\n                <span className=\"col-lg-3 text-left font-weight-bold\">\r\n                  Contacts\r\n                </span>\r\n                {Array.isArray(this.props.patient.EmergencyContacts)\r\n                  ? this.props.patient.EmergencyContacts.map(v => (\r\n                      <React.Fragment>\r\n                        {`${v.Name} (${v.RelationShip})`}\r\n                        <br />\r\n                      </React.Fragment>\r\n                    ))\r\n                  : \"N/A\"}\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.props.onHandlePatientChange(e);\r\n  };\r\n\r\n  formatAddress = ({\r\n    Street1,\r\n    Street2,\r\n    City,\r\n    State,\r\n    PostalCode,\r\n    Country,\r\n    Type\r\n  }) =>\r\n    `${Street1}, ${\r\n      Street2 ? Street2 + \", \" : \"\"\r\n    }${City}, ${State}, ${PostalCode}, ${Country} [${Type}]\\n`;\r\n}\r\n\r\nexport default PatientInfo;\r\n","export default {\r\n  baseURL: \"https://vafhirpoc.azurewebsites.net/api\"\r\n};\r\n","import React from \"react\";\r\nimport configurations from \"./../data/configurations\";\r\nimport \"./common.css\";\r\n\r\nclass Medication extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      medication: null,\r\n      loading: true\r\n    };\r\n\r\n    this.updateData = this.updateData.bind(this);\r\n    this.updateState = this.updateState.bind(this);\r\n    this.updateData();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.UpdateMedication = function(a) {\r\n      this.updateState(a);\r\n    }.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.patientId != this.props.patientId) this.updateData();\r\n  }\r\n\r\n  render() {\r\n    console.log(\"medication render\");\r\n    return (\r\n      this.state.medication &&\r\n      Array.isArray(this.state.medication) &&\r\n      this.state.medication.length > 0 && (\r\n        <React.Fragment>\r\n          <div\r\n            className={\r\n              \"col-lg-12 p-2 bg-dark text-light d-flex justify-content-between shadow \" +\r\n              (this.state.loading ? \"load\" : \"\")\r\n            }\r\n          >\r\n            <span>Medication</span>\r\n          </div>\r\n          {this.state.medication && this.renderTable()}\r\n        </React.Fragment>\r\n      )\r\n    );\r\n  }\r\n\r\n  updateData = () => {\r\n    if (this.props.patientId == 0) return;\r\n    this.setState({ loading: true });\r\n    console.log(\"Loading medication data!\");\r\n    fetch(\r\n      configurations.baseURL +\r\n        \"/MedicationRequest/Patient/\" +\r\n        this.props.patientId\r\n    ).then(\r\n      res => res.json().then(this.updateState),\r\n      error => {\r\n        console.log(\"fetch medication failed\", error);\r\n        this.updateState(null);\r\n      }\r\n    );\r\n  };\r\n\r\n  updateState(s) {\r\n    console.log(\"update state medication\");\r\n    this.setState({ medication: s, loading: false });\r\n  }\r\n\r\n  renderTable() {\r\n    return (\r\n      <div\r\n        className={\r\n          \"table-responsive col-lg-12 p-0 \" +\r\n          (this.state.loading ? \"invisible\" : \"\")\r\n        }\r\n        style={{ fontSize: 14, maxHeight: \"35vh\" }}\r\n      >\r\n        <table className=\"table table-striped table-sm table-hover m-0\">\r\n          <thead>\r\n            <tr className=\"row m-0 sticky-top bg-light\">\r\n              <th className=\"col\">Medication</th>\r\n              <th className=\"col\">Status</th>\r\n              <th className=\"col\">DoseQuantity</th>\r\n              <th className=\"col\">DoseUnits</th>\r\n              <th className=\"col\">EffectiveDate</th>\r\n              <th className=\"col\">ReasonGiven</th>\r\n              <th className=\"col\">ReasonNotGiven</th>\r\n              <th className=\"col\">Route</th>\r\n              <th className=\"col\">WasGiven</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.medication.map(v => (\r\n              <tr className=\"row m-0\">\r\n                <td className=\"col\">{v.Medication}</td>\r\n                <td className=\"col\">{v.Status}</td>\r\n                <td className=\"col\">{v.DoseQuantity}</td>\r\n                <td className=\"col\">{v.DoseUnits}</td>\r\n                <td className=\"col\">\r\n                  {new Date(v.EffectiveDate).toDateString()}\r\n                </td>\r\n                <td className=\"col\">{v.ReasonGiven}</td>\r\n                <td className=\"col\">{v.ReasonNotGiven}</td>\r\n                <td className=\"col\">{v.Route}</td>\r\n                <td className=\"col\">{v.WasGiven ? \"Yes\" : \"No\"}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Medication;\r\n","import React from \"react\";\r\nimport \"./common.css\";\r\n\r\nclass ConditionBase extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: false,\r\n      loading: true\r\n    };\r\n    this.toggleCollapse = this.toggleCollapse.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.data &&\r\n          Array.isArray(this.props.data) &&\r\n          this.props.data.length > 0 &&\r\n          this.renderTable()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  toggleCollapse() {\r\n    this.setState({ collapsed: !this.state.collapsed });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  renderTable() {\r\n    return (\r\n      <div\r\n        className=\"table-responsive border-right col p-0 \"\r\n        style={{ fontSize: 14, maxHeight: \"45vh\" }}\r\n      >\r\n        {this.props.data && (\r\n          <div className=\"col-lg-12 p-1 bg-secondary text-light d-flex justify-content-between sticky-top\">\r\n            <span>{this.props.model}</span>\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={this.toggleCollapse}\r\n            >\r\n              {this.state.collapsed ? \"expand\" : \"collapse\"}\r\n            </button>\r\n          </div>\r\n        )}\r\n        <table\r\n          className={\r\n            \"table table-striped table-sm table-hover m-0 \" +\r\n            (this.state.collapsed ? \"d-none\" : \"\")\r\n          }\r\n        >\r\n          <thead>\r\n            <tr className=\"row m-0 sticky-top bg-light\" style={{ top: 39 }}>\r\n              <th className=\"col\">Text</th>\r\n              <th className=\"col\">Onset</th>\r\n              <th className=\"col\">Abatement Date</th>\r\n              <th className=\"col\">Severity</th>\r\n              <th className=\"col\">Coding</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {[].concat(this.props.data).map(v => (\r\n              <tr className=\"row m-0\">\r\n                <td className=\"col\">{v.Text}</td>\r\n                <td className=\"col\">\r\n                  {v.Onset ? new Date(v.Onset).toDateString() : \"N/A\"}\r\n                </td>\r\n                <td className=\"col\">{v.AbatementDate}</td>\r\n                <td className=\"col\">{v.Severity}</td>\r\n                <td className=\"col\">\r\n                  {(({ Code, Text }) =>\r\n                    `${Text ? Text : \"N/A\"} [${Code ? Code : \"N/A\"}]`)(\r\n                    v.Coding ? v.Coding : {}\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConditionBase;\r\n","import React, { Component } from \"react\";\r\nimport ConditionBase from \"./conditionBase\";\r\nimport configurations from \"../data/configurations\";\r\n\r\nclass Condition extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateState = this.updateState.bind(this);\r\n    this.state = {\r\n      condition: {\r\n        Diagnoses: null,\r\n        Problems: null\r\n      },\r\n      loading: true\r\n    };\r\n    this.updateData = this.updateData.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.patientId !== this.props.patientId) this.updateData();\r\n  }\r\n\r\n  render() {\r\n    console.log(\"condition render\");\r\n    return (\r\n      this.state.condition &&\r\n      (this.state.condition.Diagnoses || this.state.condition.Problems) && (\r\n        <React.Fragment>\r\n          <div\r\n            className={\r\n              \"col-lg-12 p-2 bg-dark text-light d-flex justify-content-between shadow \" +\r\n              (this.state.loading ? \"load\" : \"\")\r\n            }\r\n          >\r\n            <span>Condition</span>\r\n          </div>\r\n          <div\r\n            className={\r\n              \"condition d-flex flex-row \" +\r\n              (this.state.loading ? \"invisible\" : \"\")\r\n            }\r\n            style={{ flexGrow: 1 }}\r\n          >\r\n            {this.state.condition.Diagnoses && (\r\n              <ConditionBase\r\n                model=\"Diagnosis\"\r\n                data={this.state.condition.Diagnoses}\r\n              ></ConditionBase>\r\n            )}\r\n            {this.state.condition.Problems && (\r\n              <ConditionBase\r\n                model=\"Problems\"\r\n                data={this.state.condition.Problems}\r\n              ></ConditionBase>\r\n            )}\r\n          </div>\r\n        </React.Fragment>\r\n      )\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  updateData = () => {\r\n    if (this.props.patientId == 0) return;\r\n    this.setState({ loading: true });\r\n    console.log(\"Loading condition data!\");\r\n    fetch(\r\n      configurations.baseURL + \"/Condition/Patient/\" + this.props.patientId\r\n    ).then(\r\n      res => {\r\n        res.json().then(this.updateState);\r\n      },\r\n      error => {\r\n        console.log(\"fetch condition failed\", error);\r\n        this.updateState({\r\n          Diagnoses: null,\r\n          Problems: null\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  updateState(s) {\r\n    console.log(\"update state condition\");\r\n    this.setState({\r\n      condition: s,\r\n      loading: false\r\n    });\r\n  }\r\n}\r\n\r\nexport default Condition;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { oauth2 as SMART } from \"fhirclient\";\nimport PatientInfo from \"./components/patient\";\nimport Medication from \"./components/medication\";\nimport Condition from \"./components/condition\";\nimport configurations from \"./data/configurations\";\n\nclass App extends React.Component {\n  smartKey;\n\n  constructor(props) {\n    super(props);\n    this.updatePatient = this.updatePatient.bind(this);\n\n    this.state = {\n      patient: null,\n      loadingPatient: false\n    };\n\n    if (props.smartKey !== null) {\n      SMART.ready()\n        .then(client => client.patient.read())\n        .then(\n          patient => {\n            console.log(\"patient\", patient);\n            this.updatePatient(this.getPatientDetails(patient));\n          },\n          error => {\n            console.error(error);\n          }\n        )\n        .catch(console.error);\n    }\n    this.handlePatientChange = this.handlePatientChange.bind(this);\n  }\n\n  // UI loaded\n  componentDidMount() {\n    window.UpdatePatient = function(a) {\n      this.updatePatient(a);\n    }.bind(this);\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid p-0 justify-content-start row no-gutters\">\n        <div\n          className=\"navbar bg-dark text-light col-lg-12 pl-2\"\n          style={{ backgroundColor: \"#005693\" }}\n        >\n          <h4>React FHIR Test App</h4>\n        </div>\n        <PatientInfo\n          patient={this.state.patient}\n          onHandlePatientChange={this.handlePatientChange}\n          loading={this.state.loadingPatient}\n        />\n        <div className=\"col-lg-8 p-2\">\n          <Medication\n            patientId={this.state.patient ? this.state.patient.Id : 0}\n          />\n        </div>\n        <Condition patientId={this.state.patient ? this.state.patient.Id : 0} />\n      </div>\n    );\n  }\n\n  handlePatientChange = e => {\n    this.setState({ loadingPatient: true });\n    fetch(configurations.baseURL + \"/Patient/Id/\" + e.target.value)\n      .then(response => response.json().then(this.updatePatient))\n      .catch(e => {\n        this.updatePatient(null);\n        console.log(`error fetching patient`, e);\n      });\n  };\n\n  retreivePhone = ({ value, use }) => ({ Number: value, Type: use });\n  retreiveAddress = ({ use, line, city, state, postalCode, country }) => ({\n    Street1: line ? line[0] : \"\",\n    Street2: line ? line[1] : \"N/A\",\n    City: city,\n    State: state,\n    PostalCode: postalCode,\n    Country: country,\n    Type: use\n  });\n  retreiveContacts = ({ relationship, name, telecom, address }) => ({\n    Email: \"N/A\",\n    Name: name.text,\n    Phones: telecom ? telecom.map(this.retreivePhone) : \"N/A\",\n    RelationShip: relationship ? relationship[0].text : \"N/A\",\n    Address: address ? this.retreiveAddress(address) : \"N/A\"\n  });\n\n  getPatientDetails = patient => ({\n    Name: patient.name\n      ? patient.name.find(v => v.use == \"official\").text\n      : \"N/A\",\n    Gender: patient.gender,\n    Addresses: patient.address\n      ? patient.address.map(this.retreiveAddress)\n      : \"N/A\",\n    Active: patient.active,\n    BirthDate: patient.birthDate,\n    Phone: patient.telecom ? patient.telecom.map(this.retreivePhone) : \"N/A\",\n    EmergencyContacts: patient.contact\n      ? patient.contact.map(this.retreiveContacts)\n      : \"N/A\"\n  });\n\n  updatePatient(p) {\n    this.setState({ patient: p, loadingPatient: false });\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport FHIR from \"fhirclient\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    console.log(FHIR);\r\n\r\n    FHIR.oauth2.authorize({\r\n      client_id: \"ba2b34f9-2f17-4858-b5f9-6a5b3312e26a\",\r\n      scope:\r\n        \"patient/Patient.read patient/Encounter.read patient/Condition.read patient/MedicationRequest.read launch online_access openid profile\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {window.location.href}\r\n        'client_id': 'ba2b34f9-2f17-4858-b5f9-6a5b3312e26a'\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"react-app-polyfill/ie9\";\nimport \"react-app-polyfill/stable\";\nimport \"object.fromentries\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Launch from \"./components/Launch\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nconst params = Object.fromEntries(\n  window.location.href\n    .replace(/.*\\?/, \"\")\n    .split(\"&\")\n    .map(v => v.split(\"=\"))\n);\nconst launchContext = () =>\n  window.location.href\n    .replace(/.*\\?/, \"\")\n    .split(\"&\")\n    .filter(v => v.split(\"=\")[0] == \"iss\").length > 0;\n\nReactDOM.render(\n  launchContext() ? (\n    <Launch />\n  ) : (\n    <App smartKey={params.state ? params.state : null} />\n  ),\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}