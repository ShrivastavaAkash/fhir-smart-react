{"version":3,"sources":["data/patient-list.js","components/PatientInfo/PatientInfo.js","data/configurations.js","data/sampleMedicationModel.js","components/medication.js","components/conditionBase.js","components/Condition.js","App.js","components/Launch.js","serviceWorker.js","index.js"],"names":["id","name","desc","birthDate","gender","PatientInfo","props","handleChange","e","onHandlePatientChange","formatAddress","Street1","Street2","City","State","PostalCode","Country","Type","Fragment","bind","className","onChange","this","disabled","patientList","map","v","value","patient","Name","Gender","Array","isArray","Addresses","Active","BirthDate","Phone","p","Number","EmergencyContacts","RelationShip","React","Component","baseURL","Coding","Code","Text","Dose","DoseQuantity","DoseUnits","EffectiveDate","Medication","ReasonGiven","ReasonNotGiven","Route","Status","WasGiven","updateData","console","log","fetch","configurations","patientId","then","res","json","udpateState","error","updateState","SampleMedicationModel","state","medication","window","UpdateMedication","a","prevProps","prevState","renderTable","s","setState","Date","toDateString","ConditionBase","collapsed","toggleCollapse","data","model","onClick","concat","Onset","AbatementDate","Severity","Condition","Diagnoses","Problems","condition","App","handlePatientChange","target","response","updatePatient","catch","retreivePhone","use","retreiveAddress","line","city","postalCode","country","retreiveContacts","relationship","telecom","address","Email","text","Phones","Address","getPatientDetails","find","active","contact","smartKey","SMART","ready","client","read","UpdatePatient","style","backgroundColor","Id","FHIR","oauth2","authorize","client_id","scope","location","href","Boolean","hostname","match","params","Object","fromEntries","replace","split","ReactDOM","render","filter","length","Launch","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.5de7b6af.chunk.js","sourcesContent":["export default [\r\n  {\r\n    id: 4342012,\r\n    name: \"SMART, Timmy\",\r\n    desc: \"Young male child with inpatient encounter\",\r\n    birthDate: \"2012-02-19\",\r\n    gender: \"Male\"\r\n  },\r\n  {\r\n    id: 1316024,\r\n    name: \"Peters, Tim\",\r\n    desc: \"\",\r\n    birthDate: \"1961-04-30\",\r\n    gender: \"Male\"\r\n  },\r\n  {\r\n    id: 4342008,\r\n    name: \"SMART, Wilma\",\r\n    desc: \"Communication language set to Hindi\",\r\n    birthDate: \"1947-03-16\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 4342009,\r\n    name: \"SMART, Nancy\",\r\n    desc: \"Patient with pregnancy condition\",\r\n    birthDate: \"1980-08-11\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 4342010,\r\n    name: \"SMART, Joe\",\r\n    desc: \"\",\r\n    birthDate: \"1976-04-29\",\r\n    gender: \"Male\"\r\n  },\r\n  {\r\n    id: 4342011,\r\n    name: \"SMART, Hailey\",\r\n    desc: \"\",\r\n    birthDate: \"2003-12-02\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 4478007,\r\n    name: \"SMART, Fred Rick\",\r\n    desc: \"\",\r\n    birthDate: \"1946-08-22\",\r\n    gender: \"Male\"\r\n  },\r\n  {\r\n    id: 4596007,\r\n    name: \"SMART, Valerie S\",\r\n    desc: \"\",\r\n    birthDate: \"1984-04-15\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 4696007,\r\n    name: \"Rotunda, Rhonda\",\r\n    desc: \"Patient with pregnancy condition\",\r\n    birthDate: \"1980-05-01\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 4614008,\r\n    name: \"Read, Amber\",\r\n    desc: \"\",\r\n    birthDate: \"2005-11-21\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 4754012,\r\n    name: \"SMART, Dave\",\r\n    desc: \"\",\r\n    birthDate: \"1980-07-15\",\r\n    gender: \"Male\"\r\n  },\r\n  {\r\n    id: 4790007,\r\n    name: \"MARTIN-GREEN, Sonequa\",\r\n    desc: \"\",\r\n    birthDate: \"1985-04-12\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 4642007,\r\n    name: \"SMART, Connie\",\r\n    desc: \"Patient with common technical issues\",\r\n    birthDate: \"1972-12-19\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 4342012,\r\n    name: \"SMART, Timmy\",\r\n    desc: \"Young male child with outpatient encounter\",\r\n    birthDate: \"2012-02-19\",\r\n    gender: \"Male\"\r\n  },\r\n  {\r\n    id: 4890008,\r\n    name: \"Svensson, Linda\",\r\n    desc: \"\",\r\n    birthDate: \"1981-03-30\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 4890007,\r\n    name: \"Johansson, Anders\",\r\n    desc: \"\",\r\n    birthDate: \"1936-10-15\",\r\n    gender: \"Male\"\r\n  },\r\n  {\r\n    id: 4924007,\r\n    name: \"Goldberg, Whoopi\",\r\n    desc: \"Critical care patient\",\r\n    birthDate: \"1955-01-01\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 5226007,\r\n    name: \"Parrish, Lizzie\",\r\n    desc: \"ICU patient with hourly vital signs\",\r\n    birthDate: \"1990-08-30\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 5338007,\r\n    name: \"Davis, Athol J\",\r\n    desc: \"Patient with height and weight in imperial units\",\r\n    birthDate: \"1989-02-19\",\r\n    gender: \"Male\"\r\n  },\r\n  {\r\n    id: 4744007,\r\n    name: \"Oncology, Cancerstaging\",\r\n    desc: \"Cancer patient with cancer staging observations\",\r\n    birthDate: \"1960-01-17\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 5862008,\r\n    name: \"Emory, Hal\",\r\n    desc: \"inpatient with Vancomycin and Augmentin medication orders\",\r\n    birthDate: \"1991-04-05\",\r\n    gender: \"male\"\r\n  },\r\n  {\r\n    id: 5862007,\r\n    name: \"Emory, Carrie\",\r\n    desc: \"inpatient with Levofloxacin and Vancomycin medication orders\",\r\n    birthDate: \"1990-04-01\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 5926007,\r\n    name: \"Walter, Claudio\",\r\n    desc:\r\n      \"69 year old male patient that has had a Pulmonary …ive conditions and laboratory orders with results\",\r\n    birthDate: \"1949-09-09\",\r\n    gender: \"Male\"\r\n  },\r\n  {\r\n    id: 5938007,\r\n    name: \"McNabb, Sheona\",\r\n    desc: \"4 month old female inpatient with cow milk and nut allergies\",\r\n    birthDate: \"2019-01-10\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 5938008,\r\n    name: \"Ruskin, Ishbel\",\r\n    desc: \"1 yr old female inpatient with acetaminophen and egg allergies\",\r\n    birthDate: \"2018-05-10\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 5938009,\r\n    name: \"McGee, Ian\",\r\n    desc: \"7 yr old male inpatient with sulfa and tree pollen allergies\",\r\n    birthDate: \"2012-05-09\",\r\n    gender: \"male\"\r\n  },\r\n  {\r\n    id: 5998007,\r\n    name: \"Promis, Portal\",\r\n    desc:\r\n      \"30 yr old female inpatient with multiple health questioner documentations\",\r\n    birthDate: \"1988-08-08\",\r\n    gender: \"female\"\r\n  },\r\n  {\r\n    id: 6946007,\r\n    name: \"Snow, Christine\",\r\n    desc:\r\n      \"Patient with labor and delivery observations, conditions and procedures.\",\r\n    birthDate: \"1994-12-24\",\r\n    gender: \"Female\"\r\n  },\r\n  {\r\n    id: 6954007,\r\n    name: \"Snow, Jennifer\",\r\n    desc: \"Newborn with observations, conditions and procedures.\",\r\n    birthDate: \"2019-02-12\",\r\n    gender: \"Female\"\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport patientList from \"./../../data/patient-list\";\r\n\r\nclass PatientInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-4 patient-info\">\r\n        <div className=\"row col-lg-12 col-md-12 no-gutters p-0 border-right\">\r\n          <h4 className=\"col-lg-12 p-2 bg-secondary text-light mb-0 border-0 mt-2\">\r\n            <span className=\"col-lg-6\">Patient Information</span>\r\n            <select\r\n              className=\"form-control col-lg-6 bg-dark text-light\"\r\n              onChange={this.handleChange}\r\n            >\r\n              <option disabled>-- Select Patient --</option>\r\n              {patientList.map(v => (\r\n                <option value={v.id}>{v.name}</option>\r\n              ))}\r\n            </select>\r\n          </h4>\r\n          {!this.props.patient && (\r\n            <div className=\"text-secondary p-3\">Nothing to show</div>\r\n          )}\r\n          {this.props.patient && (\r\n            <ul className=\"col p-0 m-0\">\r\n              <li className=\"row p-3 border-bottom text-left no-gutters\">\r\n                <span className=\"col-lg-3 text-left font-weight-bold\">\r\n                  Name\r\n                </span>\r\n                {this.props.patient.Name}\r\n              </li>\r\n              <li className=\"row p-3 border-bottom text-left no-gutters\">\r\n                <span className=\"col-lg-3 text-left font-weight-bold\">\r\n                  Gender\r\n                </span>\r\n                {this.props.patient.Gender}\r\n              </li>\r\n              <li className=\"row p-3 border-bottom text-left no-gutters\">\r\n                <span className=\"col-lg-3 text-left font-weight-bold\">\r\n                  Addresses\r\n                </span>\r\n                {Array.isArray(this.props.patient.Addresses)\r\n                  ? this.props.patient.Addresses.map(this.formatAddress)\r\n                  : \"N/A\"}\r\n              </li>\r\n              <li className=\"row p-3 border-bottom text-left no-gutters\">\r\n                <span className=\"col-lg-3 text-left font-weight-bold\">\r\n                  Active\r\n                </span>\r\n                {this.props.patient.Active ? \"Yes\" : \"No\"}\r\n              </li>\r\n              <li className=\"row p-3 border-bottom text-left no-gutters\">\r\n                <span className=\"col-lg-3 text-left font-weight-bold\">\r\n                  Birth Date\r\n                </span>\r\n                {this.props.patient.BirthDate}\r\n              </li>\r\n              <li className=\"row p-3 border-bottom text-left no-gutters\">\r\n                <span className=\"col-lg-3 text-left font-weight-bold\">\r\n                  Phone\r\n                </span>\r\n                {Array.isArray(this.props.patient.Phone)\r\n                  ? this.props.patient.Phone.map(p => (\r\n                      <React.Fragment>\r\n                        {`${p.Number} (${p.Type})`}\r\n                        <br />\r\n                      </React.Fragment>\r\n                    ))\r\n                  : \"N/A\"}\r\n              </li>\r\n              <li className=\"row p-3 border-bottom text-left no-gutters\">\r\n                <span className=\"col-lg-3 text-left font-weight-bold\">\r\n                  Emergency Contacts\r\n                </span>\r\n                {Array.isArray(this.props.patient.EmergencyContacts)\r\n                  ? this.props.patient.EmergencyContacts.map(v => (\r\n                      <React.Fragment>\r\n                        {`${v.Name} (${v.RelationShip})`}\r\n                        <br />\r\n                      </React.Fragment>\r\n                    ))\r\n                  : \"N/A\"}\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleChange = e => this.props.onHandlePatientChange(e);\r\n\r\n  formatAddress = ({\r\n    Street1,\r\n    Street2,\r\n    City,\r\n    State,\r\n    PostalCode,\r\n    Country,\r\n    Type\r\n  }) => (\r\n    <React.Fragment>\r\n      `${Street1}, ${Street2 ? Street2 + \", \" : \"\"}${City}, ${State}, $\r\n      {PostalCode}, ${Country} [${Type}]`} <br />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PatientInfo;\r\n","export default {\r\n  baseURL: \"https://nuancefhircernerapi.azurewebsites.net/\"\r\n};\r\n","export default [\r\n  {\r\n    Coding: {\r\n      Code: 120826863,\r\n      Text: \"\"\r\n    },\r\n    Dose: \"N/A\",\r\n    DoseQuantity: 1000,\r\n    DoseUnits: \"ml\",\r\n    EffectiveDate: \"2017-09-07T08:33:00.000-07:00\",\r\n    Medication: \"Dextrose 2.5% with 0.45% NaCl 1000 mL\",\r\n    ReasonGiven: \"N/A\",\r\n    ReasonNotGiven: \"N/A\",\r\n    Route: \"IV\",\r\n    Status: \"active\",\r\n    WasGiven: true\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport configurations from \"./../data/configurations\";\r\nimport SampleMedicationModel from \"./../data/sampleMedicationModel\";\r\n\r\nclass Medication extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      medication: null\r\n    };\r\n\r\n    this.updateData = this.updateData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.UpdateMedication = function(a) {\r\n      this.updateState(a);\r\n    }.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.patientId != this.props.patientId) this.updateData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"col-lg-12 p-2 bg-dark text-light d-flex justify-content-between shadow\">\r\n          <span>Medication</span>\r\n        </div>\r\n        {this.state.medication && this.renderTable()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  updateData = () => {\r\n    console.log(\"Loading medication data!\");\r\n    fetch(\r\n      configurations.baseURL + \"/Medication/Id/\" + this.props.patientId\r\n    ).then(\r\n      res => res.json().then(this.udpateState),\r\n      error => {\r\n        console.log(\"fetch medication failed\", error);\r\n        this.updateState(SampleMedicationModel);\r\n      }\r\n    );\r\n  };\r\n\r\n  updateState(s) {\r\n    this.setState({ medication: s });\r\n  }\r\n\r\n  renderTable() {\r\n    return (\r\n      <div className=\"table-responsive col-lg-12 p-0\">\r\n        <table className=\"table table-striped table-sm table-hover m-0\">\r\n          <thead>\r\n            <tr className=\"row m-0\">\r\n              <th className=\"col\">Medication</th>\r\n              <th className=\"col\">Status</th>\r\n              <th className=\"col\">DoseQuantity</th>\r\n              <th className=\"col\">DoseUnits</th>\r\n              <th className=\"col\">EffectiveDate</th>\r\n              <th className=\"col\">ReasonGiven</th>\r\n              <th className=\"col\">ReasonNotGiven</th>\r\n              <th className=\"col\">Route</th>\r\n              <th className=\"col\">WasGiven</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.medication.map(v => (\r\n              <tr className=\"row m-0\">\r\n                <td className=\"col\">{v.Medication}</td>\r\n                <td className=\"col\">{v.Status}</td>\r\n                <td className=\"col\">{v.DoseQuantity}</td>\r\n                <td className=\"col\">{v.DoseUnits}</td>\r\n                <td className=\"col\">\r\n                  {new Date(v.EffectiveDate).toDateString()}\r\n                </td>\r\n                <td className=\"col\">{v.ReasonGiven}</td>\r\n                <td className=\"col\">{v.ReasonNotGiven}</td>\r\n                <td className=\"col\">{v.Route}</td>\r\n                <td className=\"col\">{v.WasGiven ? \"Yes\" : \"No\"}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Medication;\r\n","import React from \"react\";\r\n\r\nclass ConditionBase extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: false\r\n    };\r\n    this.toggleCollapse = this.toggleCollapse.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.data && (\r\n          <div className=\"col-lg-12 p-1 bg-secondary text-light d-flex justify-content-between\">\r\n            <span>{this.props.model}</span>\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={this.toggleCollapse}\r\n            >\r\n              {this.state.collapsed ? \"expand\" : \"collapse\"}\r\n            </button>\r\n          </div>\r\n        )}\r\n        {this.props.data && this.renderTable()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  toggleCollapse() {\r\n    this.setState({ collapsed: !this.state.collapsed });\r\n  }\r\n\r\n  renderTable() {\r\n    return (\r\n      <div\r\n        className={\r\n          \"table-responsive col-lg-12 p-0 \" +\r\n          (this.state.collapsed ? \"d-none\" : \"\")\r\n        }\r\n      >\r\n        <table className=\"table table-striped table-sm table-hover m-0\">\r\n          <thead>\r\n            <tr className=\"row m-0\">\r\n              <th className=\"col\">Text</th>\r\n              <th className=\"col\">Onset</th>\r\n              <th className=\"col\">Abatement Date</th>\r\n              <th className=\"col\">Severity</th>\r\n              <th className=\"col\">Coding</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {[].concat(this.props.data).map(v => (\r\n              <tr className=\"row m-0\">\r\n                <td className=\"col\">{v.Text}</td>\r\n                <td className=\"col\">{v.Onset}</td>\r\n                <td className=\"col\">{v.AbatementDate}</td>\r\n                <td className=\"col\">{v.Severity}</td>\r\n                <td className=\"col\">\r\n                  {(({ Code, Text }) =>\r\n                    `${Text ? Text : \"N/A\"} [${Code ? Code : \"N/A\"}]`)(\r\n                    v.Coding\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConditionBase;\r\n","import React, { Component } from \"react\";\r\nimport ConditionBase from \"./conditionBase\";\r\nimport SampleConditionModel from \"./../data/SampleConditionModel\";\r\nimport configurations from \"./../data/configurations\";\r\n\r\nclass Condition extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateState = this.updateState.bind(this);\r\n    this.state = {\r\n      condition: {\r\n        Diagnoses: null,\r\n        Problems: null\r\n      }\r\n    };\r\n    this.updateData = this.updateData.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.patientId !== this.props.patientId) this.updateData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"col-lg-12 p-2 bg-dark text-light d-flex justify-content-between shadow\">\r\n          <span>Condition</span>\r\n        </div>\r\n        <div className=\"condition d-flex flex-column\">\r\n          <ConditionBase\r\n            model=\"Diagnosis\"\r\n            data={this.state.condition.Diagnoses}\r\n          ></ConditionBase>\r\n          <ConditionBase\r\n            model=\"Problems\"\r\n            data={this.state.condition.Problems}\r\n          ></ConditionBase>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  updateData = () => {\r\n    console.log(\"Loading condition data!\");\r\n    fetch(\r\n      configurations.baseURL + \"/Condition/Id/\" + this.props.patientId\r\n    ).then(\r\n      res => res.json().then(this.udpateState),\r\n      error => {\r\n        console.log(\"fetch condition failed\", error);\r\n        this.updateState({\r\n          Diagnoses: null,\r\n          Problems: null\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  updateState(s) {\r\n    this.setState({\r\n      condition: s\r\n    });\r\n  }\r\n}\r\n\r\nexport default Condition;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { oauth2 as SMART } from \"fhirclient\";\nimport PatientInfo from \"./components/PatientInfo/PatientInfo\";\nimport Medication from \"./components/medication\";\nimport Condition from \"./components/Condition\";\nimport configurations from \"./data/configurations\";\n\nclass App extends React.Component {\n  smartKey;\n\n  constructor(props) {\n    super(props);\n    this.updatePatient.bind(this);\n\n    this.state = {\n      patient: null\n    };\n\n    if (props.smartKey !== null) {\n      SMART.ready()\n        .then(client => client.patient.read())\n        .then(\n          patient => {\n            console.log(\"patient\", patient);\n            this.updatePatient(this.getPatientDetails(patient));\n            //this.meds = meds;\n          },\n          error => {\n            console.error(error);\n          }\n        )\n        .catch(console.error);\n    }\n\n    this.handlePatientChange = this.handlePatientChange.bind(this);\n  }\n\n  // UI loaded\n  componentDidMount() {\n    window.UpdatePatient = function(a) {\n      this.updatePatient(a);\n    }.bind(this);\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid p-0 justify-content-start row no-gutters\">\n        <div\n          className=\"navbar bg-dark text-light col-lg-12 pl-2\"\n          style={{ backgroundColor: \"#005693\" }}\n        >\n          <h4>React FHIR Test App</h4>\n        </div>\n        {\n          <PatientInfo\n            patient={this.state.patient}\n            onHandlePatientChange={this.handlePatientChange}\n          />\n        }\n        {this.state.patient && (\n          <div className=\"col-lg-8 p-2\">\n            <Medication patientId={this.state.patient.Id} />\n            <hr />\n            <Condition patientId={this.state.patient.Id} />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  handlePatientChange = e => {\n    fetch(configurations.baseURL + \"/Patient/Id/\" + e.target.value)\n      .then(response => {\n        this.updatePatient(response);\n      })\n      .catch(e => {\n        this.updatePatient(null);\n        console.log(`error fetching patient ${e.target.value}`, e);\n      });\n  };\n\n  retreivePhone = ({ value, use }) => ({ Number: value, Type: use });\n  retreiveAddress = ({ use, line, city, state, postalCode, country }) => ({\n    Street1: line ? line[0] : \"\",\n    Street2: line ? line[1] : \"N/A\",\n    City: city,\n    State: state,\n    PostalCode: postalCode,\n    Country: country,\n    Type: use\n  });\n  retreiveContacts = ({ relationship, name, telecom, address }) => ({\n    Email: \"N/A\",\n    Name: name.text,\n    Phones: telecom ? telecom.map(this.retreivePhone) : \"N/A\",\n    RelationShip: relationship ? relationship[0].text : \"N/A\",\n    Address: address ? this.retreiveAddress(address) : \"N/A\"\n  });\n\n  getPatientDetails = patient => ({\n    Name: patient.name\n      ? patient.name.find(v => v.use == \"official\").text\n      : \"N/A\",\n    Gender: patient.gender,\n    Addresses: patient.address\n      ? patient.address.map(this.retreiveAddress)\n      : \"N/A\",\n    Active: patient.active,\n    BirthDate: patient.birthDate,\n    Phone: patient.telecom ? patient.telecom.map(this.retreivePhone) : \"N/A\",\n    EmergencyContacts: patient.contact\n      ? patient.contact.map(this.retreiveContacts)\n      : \"N/A\"\n  });\n\n  updatePatient(p) {\n    this.setState({ patient: p });\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport FHIR from \"fhirclient\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    console.log(FHIR);\r\n\r\n    FHIR.oauth2.authorize({\r\n      client_id: \"ba2b34f9-2f17-4858-b5f9-6a5b3312e26a\",\r\n      scope:\r\n        \"patient/Patient.read patient/Encounter.read patient/Condition.read patient/MedicationRequest.read launch online_access openid profile\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {window.location.href}\r\n        'client_id': 'ba2b34f9-2f17-4858-b5f9-6a5b3312e26a'\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Launch from './components/Launch';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst params = Object.fromEntries(window.location.href.replace(/.*\\?/, \"\").split(\"&\").map(v => v.split(\"=\")));\nconst launchContext = () => window.location.href.replace(/.*\\?/, \"\").split(\"&\").filter(v => v.split(\"=\")[0] == \"iss\").length > 0;\n\nReactDOM.render(launchContext() ? <Launch  /> : <App smartKey={params.state ? params.state : null}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}