{"version":3,"sources":["components/PatientInfo/PatientInfo.js","App.js","components/Launch.js","serviceWorker.js","index.js"],"names":["PatientInfo","console","log","this","props","patient","className","Object","keys","map","value","Name","Gender","Addresses","v","values","filter","a","join","Active","BirthDate","Phone","p","Number","Type","EmergencyContacts","RelationShip","React","Component","App","retreivePhone","use","retreiveAddress","line","city","state","postalCode","country","Street1","Street2","City","State","PostalCode","Country","retreiveContacts","relationship","name","telecom","address","Email","text","Phones","Address","getPatientDetails","find","gender","active","birthDate","contact","smartKey","SMART","ready","then","client","Promise","all","read","meds","error","catch","FHIR","oauth2","authorize","window","location","href","Boolean","hostname","match","params","fromEntries","replace","split","ReactDOM","render","length","Launch","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.9d894a30.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass PatientInfo extends React.Component {\r\n\r\n    render() {\r\n        console.log(\"patient Info \", this.props.patient);\r\n        return <div className=\"container patient-info\">\r\n                    <h5 className=\"display-4\">Patient Information</h5>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr className=\"row\">\r\n                                {Object.keys(this.props.patient).map( (value) => (<th className=\"col\">{value}</th>) )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr className=\"row\">\r\n                                <td className=\"cell\">{this.props.patient.Name}</td>\r\n                                <td className=\"cell\">{this.props.patient.Gender}</td>\r\n                                <td className=\"cell\">{this.props.patient.Addresses.map(v => Object.values(v).filter(a => a ).join(\", \"))}</td>\r\n                                <td className=\"cell\">{this.props.patient.Active ? \"Yes\" : \"No\" }</td>\r\n                                <td className=\"cell\">{this.props.patient.BirthDate}</td>\r\n                                <td className=\"cell\">{this.props.patient.Phone.map(p => p.Number + \" (\" + p.Type + \")\"  )}</td>\r\n                                <td className=\"cell\">{this.props.patient.EmergencyContacts.map(v => (v.Name + \" (\" + v.RelationShip + \")\"))}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>;\r\n    }\r\n}\r\n\r\nexport default PatientInfo;\r\n","import React from 'react';\nimport './App.css';\nimport { oauth2 as SMART } from 'fhirclient';\nimport PatientInfo from './components/PatientInfo/PatientInfo';\n\nclass App extends React.Component {\n\n  smartKey;\n  // _storageData = null;\n  // get StorageData() {\n  //   this._storageData = this._storageData == null ? JSON.parse(sessionStorage[this.smartKey]) : this._storageData;\n  //   return this._storageData;\n  // }\n\n  constructor (props) {\n    super(props);\n\n    this.smartKey = props.smartKey;\n\n    if(props.smartKey == null) {\n      this.state = {\n        patient: this.getPatientDetails({\"resourceType\":\"Patient\",\"id\":\"4342010\",\"meta\":{\"versionId\":\"25\",\"lastUpdated\":\"2019-07-22T08:19:55.000Z\"},\"text\":{\"status\":\"generated\",\"div\":\"<div xmlns=\\\"http://www.w3.org/1999/xhtml\\\"><p><b>Patient</b></p><p><b>Status</b>: Active</p><p><b>Name</b>: SMART, JOE</p><p><b>DOB</b>: Apr 29, 1976</p><p><b>Administrative Gender</b>: Male</p><p><b>Marital Status</b>: Married</p></div>\"},\"extension\":[{\"url\":\"http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity\",\"extension\":[{\"url\":\"ombCategory\",\"valueCoding\":{\"system\":\"urn:oid:2.16.840.1.113883.6.238\",\"code\":\"2186-5\",\"display\":\"Non Hispanic or Latino\",\"userSelected\":false}},{\"url\":\"text\",\"valueString\":\"Not Hispanic or Latino\"}]}],\"identifier\":[{\"id\":\"CI-6810251-0\",\"use\":\"usual\",\"type\":{\"coding\":[{\"system\":\"https://fhir.cerner.com/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/codeSet/4\",\"code\":\"10\",\"display\":\"MRN\",\"userSelected\":true},{\"system\":\"http://terminology.hl7.org/CodeSystem/v2-0203\",\"code\":\"MR\",\"display\":\"Medical record number\",\"userSelected\":false}],\"text\":\"MRN\"},\"system\":\"urn:oid:1.1.1.1.1.1\",\"value\":\"10002702\",\"period\":{\"start\":\"2016-06-22T21:06:58.000Z\"}},{\"id\":\"CI-8934220-2\",\"use\":\"usual\",\"type\":{\"coding\":[{\"system\":\"https://fhir.cerner.com/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/codeSet/4\",\"code\":\"670843\",\"display\":\"Messaging\",\"userSelected\":true},{\"system\":\"http://terminology.hl7.org/CodeSystem/v2-0203\",\"code\":\"U\",\"display\":\"Unspecified identifier\",\"userSelected\":false}],\"text\":\"Messaging\"},\"system\":\"urn:oid:2.16.840.1.113883.3.13.8\",\"value\":\"FB4A2EB3BCB34B208FEEAFA27A7BD252\",\"period\":{\"start\":\"2018-09-13T16:44:32.000Z\"}},{\"id\":\"CI-7476209-3\",\"use\":\"usual\",\"type\":{\"coding\":[{\"system\":\"https://fhir.cerner.com/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/codeSet/4\",\"code\":\"36322657\",\"display\":\"Federated Person Principal\",\"userSelected\":true},{\"system\":\"http://terminology.hl7.org/CodeSystem/v2-0203\",\"code\":\"AN\",\"display\":\"Account number\",\"userSelected\":false}],\"text\":\"Federated Person Principal\"},\"system\":\"urn:oid:2.16.840.1.113883.3.13.6\",\"value\":\"URN:CERNER:IDENTITY-FEDERATION:REALM:687F29DD-69DD-4DE5-ACB1-FD8A2241EF3A:PRINCIPAL:UY4572B79XK\",\"period\":{\"start\":\"2016-01-01T10:00:00.000Z\"}},{\"id\":\"CI-7476210-4\",\"use\":\"usual\",\"type\":{\"coding\":[{\"system\":\"https://fhir.cerner.com/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/codeSet/4\",\"code\":\"36322657\",\"display\":\"Federated Person Principal\",\"userSelected\":true},{\"system\":\"http://terminology.hl7.org/CodeSystem/v2-0203\",\"code\":\"AN\",\"display\":\"Account number\",\"userSelected\":false}],\"text\":\"Federated Person Principal\"},\"system\":\"urn:oid:2.16.840.1.113883.3.13.6\",\"value\":\"urn:cerner:identity-federation:realm:687f29dd-69dd-4de5-acb1-fd8a2241ef3a:principal:UY4572B79XK\",\"period\":{\"start\":\"2016-01-01T10:00:00.000Z\"}},{\"id\":\"CI-9064212-5\",\"use\":\"usual\",\"type\":{\"coding\":[{\"system\":\"https://fhir.cerner.com/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/codeSet/4\",\"code\":\"36322657\",\"display\":\"Federated Person Principal\",\"userSelected\":true},{\"system\":\"http://terminology.hl7.org/CodeSystem/v2-0203\",\"code\":\"AN\",\"display\":\"Account number\",\"userSelected\":false}],\"text\":\"Federated Person Principal\"},\"system\":\"urn:oid:2.16.840.1.113883.3.13.6\",\"value\":\"URN:CERNER:IDENTITY-FEDERATION:REALM:2E882EFF-FA72-4882-ADC8-A685F7D2BFA6:PRINCIPAL:XYZ1234\"},{\"id\":\"CI-9070210-6\",\"use\":\"usual\",\"type\":{\"coding\":[{\"system\":\"https://fhir.cerner.com/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/codeSet/4\",\"code\":\"36322657\",\"display\":\"Federated Person Principal\",\"userSelected\":true},{\"system\":\"http://terminology.hl7.org/CodeSystem/v2-0203\",\"code\":\"AN\",\"display\":\"Account number\",\"userSelected\":false}],\"text\":\"Federated Person Principal\"},\"system\":\"urn:oid:2.16.840.1.113883.3.13.6\",\"value\":\"URN:CERNER:IDENTITY-FEDERATION:REALM:2E882EFF-FA72-4882-ADC8-A685F7D2BFA6:PRINCIPAL:XYIWIE1234\"}],\"active\":true,\"name\":[{\"id\":\"CI-4342010-0\",\"use\":\"official\",\"text\":\"SMART, JOE\",\"family\":\"SMART\",\"given\":[\"JOE\"],\"period\":{\"start\":\"2016-06-22T21:06:59.000Z\"}}],\"telecom\":[{\"id\":\"CI-PH-2023942-0\",\"system\":\"phone\",\"value\":\"9139898765\",\"use\":\"home\",\"rank\":\"1\",\"period\":{\"start\":\"2017-06-27T21:47:16.000Z\"}},{\"id\":\"CI-PH-2023944-1\",\"system\":\"phone\",\"value\":\"9137876555\",\"use\":\"mobile\",\"rank\":\"1\",\"period\":{\"start\":\"2017-06-27T21:47:16.000Z\"}},{\"id\":\"CI-EM-2399940-0\",\"system\":\"email\",\"value\":\"kathy.pickering@cerner.com\",\"use\":\"home\",\"rank\":\"1\",\"period\":{\"start\":\"2018-09-13T16:43:28.000Z\"}}],\"gender\":\"male\",\"birthDate\":\"1976-04-29\",\"address\":[{\"id\":\"CI-1925899-0\",\"use\":\"home\",\"text\":\"1234 Blvd\\nOverland Park, KS 66213\\nUSA\",\"line\":[\"1234 Blvd\"],\"city\":\"Overland Park\",\"district\":\"Johnson\",\"state\":\"KS\",\"postalCode\":\"66213\",\"country\":\"USA\",\"period\":{\"start\":\"2017-06-27T21:47:16.000Z\"}}],\"maritalStatus\":{\"coding\":[{\"system\":\"https://fhir.cerner.com/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/codeSet/38\",\"code\":\"309237\",\"display\":\"Married\",\"userSelected\":true},{\"system\":\"http://terminology.hl7.org/CodeSystem/v3-MaritalStatus\",\"code\":\"M\",\"display\":\"Married\",\"userSelected\":false}],\"text\":\"Married\"},\"contact\":[{\"relationship\":[{\"coding\":[{\"system\":\"https://fhir.cerner.com/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/codeSet/351\",\"code\":\"36327661\",\"display\":\"Authorized Representative\",\"userSelected\":true}],\"text\":\"Authorized Representative\"}],\"name\":{\"id\":\"CI-4342009-0\",\"use\":\"official\",\"text\":\"SHANKAR, Ganesh Jayaraman\",\"family\":\"SHANKAR\",\"given\":[\"Ganesh\",\"Jayaraman\"],\"period\":{\"start\":\"2016-06-22T20:43:05.000Z\"}},\"telecom\":[{\"system\":\"phone\",\"value\":\"9035768555\",\"use\":\"home\",\"rank\":\"1\",\"period\":{\"start\":\"2019-09-18T20:48:19.000Z\"}},{\"system\":\"email\",\"value\":\"kathy.pickering@cerner.com\",\"use\":\"home\",\"rank\":\"1\",\"period\":{\"start\":\"2018-09-13T16:37:32.000Z\"}}],\"gender\":\"female\",\"period\":{\"start\":\"2017-06-09T13:47:35.000Z\",\"end\":\"2018-05-17T20:51:36.000Z\"}}],\"communication\":[{\"language\":{\"coding\":[{\"system\":\"https://fhir.cerner.com/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/codeSet/36\",\"code\":\"151\",\"display\":\"English\",\"userSelected\":true},{\"system\":\"urn:ietf:bcp:47\",\"code\":\"en\",\"display\":\"English\",\"userSelected\":false}],\"text\":\"English\"},\"preferred\":true}],\"generalPractitioner\":[{\"id\":\"CI-6810257-15\",\"reference\":\"Practitioner/1912007\",\"display\":\"McCurdy, Michael\"}]})\n      };\n    } else {\n\n      this.state = {\n        patient: {}\n      };\n\n      SMART.ready()\n      .then(client => {\n        return Promise.all([\n          client.patient.read(),\n          // client.request(`/MedicationRequest?patient=${client.patient.id}`, {\n          //     resolveReferences: \"medicationReference\",\n          //     pageLimit: 0,\n          //     flat: true\n          // })\n        ]);\n      })\n      .then(([patient, meds]) => {\n          console.log(\"patient\", patient);\n          console.log(\"meds\", meds);\n          this.state = { \n            patient: this.getPatientDetails(patient) \n          };\n          //this.meds = meds;\n        },\n        error => {\n          console.error(error);\n      })\n      .catch(console.error);\n    }\n  } \n\n  render () {\n    return <div className=\"App\">\n            <div className=\"navbar\">React FHIR Test App</div>\n            <PatientInfo patient={this.state.patient} />\n          </div>;\n  }\n\n  \n  retreivePhone = ({value, use}) => ({ Number: value, Type: use });\n  retreiveAddress = ({use, line, city, state, postalCode, country}) => ({ Street1: line ? line[0] : \"\", Street2: line ? line[1] : \"\", City: city, State: state, PostalCode: postalCode, Country: country, Type: use });\n  retreiveContacts = ({relationship, name, telecom, address}) => ({ Email: \"\", Name: name.text, Phones: telecom.map(this.retreivePhone), RelationShip: relationship ? relationship[0].text : \"\", Address: address ? this.retreiveAddress(address) : \"\" });\n\n  getPatientDetails = (patient) => ({ \n      Name: patient.name.find(v => v.use == \"official\").text,\n      Gender: patient.gender,\n      Addresses: patient.address.map(this.retreiveAddress),\n      Active: patient.active,\n      BirthDate: patient.birthDate,\n      Phone: patient.telecom.map(this.retreivePhone),\n      EmergencyContacts: patient.contact.map(this.retreiveContacts)\n    });\n\n}\n\nexport default App;\n","import React from 'react';\r\nimport FHIR from 'fhirclient';\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        console.log(FHIR);\r\n\r\n        FHIR.oauth2.authorize({\r\n            'client_id': 'ba2b34f9-2f17-4858-b5f9-6a5b3312e26a',\r\n            'scope':  'patient/Patient.read patient/MedicationRequest.read launch online_access openid profile'\r\n        });\r\n    } \r\n\r\n\r\n    render () {\r\n        return <div className=\"App\">\r\n                {window.location.href}\r\n                'client_id': 'ba2b34f9-2f17-4858-b5f9-6a5b3312e26a'\r\n            </div>;\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Launch from './components/Launch';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst params = Object.fromEntries(window.location.href.replace(/.*\\?/, \"\").split(\"&\").map(v => v.split(\"=\")));\nconst launchContext = () => window.location.href.replace(/.*\\?/, \"\").split(\"&\").filter(v => v.split(\"=\")[0] == \"iss\").length > 0;\n\nReactDOM.render(launchContext() ? <Launch  /> : <App smartKey={params.state ? params.state : null}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}